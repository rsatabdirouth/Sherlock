//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectOnFinalIlds.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SherlockEntities1 : DbContext
    {
        public SherlockEntities1()
            : base("name=SherlockEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<ApplicationRouteMaster> ApplicationRouteMasters { get; set; }
        public virtual DbSet<ASULeadLog> ASULeadLogs { get; set; }
        public virtual DbSet<ASULead> ASULeads { get; set; }
        public virtual DbSet<Bounce> Bounces { get; set; }
        public virtual DbSet<BuyerFaceForProduct> BuyerFaceForProducts { get; set; }
        public virtual DbSet<BuyerMaster> BuyerMasters { get; set; }
        public virtual DbSet<BuyerProductLeadCategory> BuyerProductLeadCategories { get; set; }
        public virtual DbSet<BuyerProductLeadType> BuyerProductLeadTypes { get; set; }
        public virtual DbSet<BuyerProduct> BuyerProducts { get; set; }
        public virtual DbSet<BuyerProductScheduleDay> BuyerProductScheduleDays { get; set; }
        public virtual DbSet<BuyerProductSchedule> BuyerProductSchedules { get; set; }
        public virtual DbSet<BuyerProductScheduleSlab> BuyerProductScheduleSlabs { get; set; }
        public virtual DbSet<BuyerProductScheduleTime> BuyerProductScheduleTimes { get; set; }
        public virtual DbSet<CommissionMaster> CommissionMasters { get; set; }
        public virtual DbSet<CommonLeadLog> CommonLeadLogs { get; set; }
        public virtual DbSet<CommonLead> CommonLeads { get; set; }
        public virtual DbSet<ContactDetail> ContactDetails { get; set; }
        public virtual DbSet<CorporateHealthLeadLog> CorporateHealthLeadLogs { get; set; }
        public virtual DbSet<CorporateHealthLead> CorporateHealthLeads { get; set; }
        public virtual DbSet<DebtLeadLog> DebtLeadLogs { get; set; }
        public virtual DbSet<DebtLead> DebtLeads { get; set; }
        public virtual DbSet<EmailRequest> EmailRequests { get; set; }
        public virtual DbSet<EquityReleaseLeadLog> EquityReleaseLeadLogs { get; set; }
        public virtual DbSet<EquityReleaseLead> EquityReleaseLeads { get; set; }
        public virtual DbSet<HealthLeadLog> HealthLeadLogs { get; set; }
        public virtual DbSet<HealthLead> HealthLeads { get; set; }
        public virtual DbSet<IncomeProtectionLeadLog> IncomeProtectionLeadLogs { get; set; }
        public virtual DbSet<IncomeProtectionLead> IncomeProtectionLeads { get; set; }
        public virtual DbSet<InjuryClaimLeadLog> InjuryClaimLeadLogs { get; set; }
        public virtual DbSet<InjuryClaimLead> InjuryClaimLeads { get; set; }
        public virtual DbSet<LeadEmailRequest> LeadEmailRequests { get; set; }
        public virtual DbSet<LeadStatusByName> LeadStatusByNames { get; set; }
        public virtual DbSet<LifeLeadLog> LifeLeadLogs { get; set; }
        public virtual DbSet<LifeLead> LifeLeads { get; set; }
        public virtual DbSet<LoanLeadLog> LoanLeadLogs { get; set; }
        public virtual DbSet<LoanLead> LoanLeads { get; set; }
        public virtual DbSet<LogBookLoanLeadLog> LogBookLoanLeadLogs { get; set; }
        public virtual DbSet<LogBookLoanLead> LogBookLoanLeads { get; set; }
        public virtual DbSet<MortgageLeadLog> MortgageLeadLogs { get; set; }
        public virtual DbSet<MortgageLead> MortgageLeads { get; set; }
        public virtual DbSet<OrganizationMaster> OrganizationMasters { get; set; }
        public virtual DbSet<OrganizationProductAccess> OrganizationProductAccesses { get; set; }
        public virtual DbSet<PensionLeadLog> PensionLeadLogs { get; set; }
        public virtual DbSet<PensionLead> PensionLeads { get; set; }
        public virtual DbSet<PPILeadLog> PPILeadLogs { get; set; }
        public virtual DbSet<PPILead> PPILeads { get; set; }
        public virtual DbSet<PrepaidFuneralLeadLog> PrepaidFuneralLeadLogs { get; set; }
        public virtual DbSet<PrepaidFuneralLead> PrepaidFuneralLeads { get; set; }
        public virtual DbSet<ProductMaster> ProductMasters { get; set; }
        public virtual DbSet<ProductSlab> ProductSlabs { get; set; }
        public virtual DbSet<RoleMaster> RoleMasters { get; set; }
        public virtual DbSet<SiteVisitor> SiteVisitors { get; set; }
        public virtual DbSet<SlabDefinition> SlabDefinitions { get; set; }
        public virtual DbSet<SolarLeadLog> SolarLeadLogs { get; set; }
        public virtual DbSet<SolarLead> SolarLeads { get; set; }
        public virtual DbSet<SuppressionDetail> SuppressionDetails { get; set; }
        public virtual DbSet<Token> Tokens { get; set; }
        public virtual DbSet<TransferLog> TransferLogs { get; set; }
        public virtual DbSet<UserApplicationAccess> UserApplicationAccesses { get; set; }
        public virtual DbSet<UserMaster> UserMasters { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<WebsiteMaster> WebsiteMasters { get; set; }
        public virtual DbSet<ILDS_SEARCH_DASHBOARD_ALLDATA> ILDS_SEARCH_DASHBOARD_ALLDATA { get; set; }
        public virtual DbSet<ILDS_SEARCH_DASHBOARD_SMALLDATA> ILDS_SEARCH_DASHBOARD_SMALLDATA { get; set; }
    
        public virtual ObjectResult<PREV_SP_LEAD_INFO_Result> PREV_SP_LEAD_INFO(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> trnsfrStart, Nullable<System.DateTime> trnsfrEnd, string productName, string websiteName, string leadStatus, string buyerName, string fullName, string email, string workPhone, string homePhone, Nullable<int> leadId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var trnsfrStartParameter = trnsfrStart.HasValue ?
                new ObjectParameter("trnsfrStart", trnsfrStart) :
                new ObjectParameter("trnsfrStart", typeof(System.DateTime));
    
            var trnsfrEndParameter = trnsfrEnd.HasValue ?
                new ObjectParameter("trnsfrEnd", trnsfrEnd) :
                new ObjectParameter("trnsfrEnd", typeof(System.DateTime));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var websiteNameParameter = websiteName != null ?
                new ObjectParameter("websiteName", websiteName) :
                new ObjectParameter("websiteName", typeof(string));
    
            var leadStatusParameter = leadStatus != null ?
                new ObjectParameter("leadStatus", leadStatus) :
                new ObjectParameter("leadStatus", typeof(string));
    
            var buyerNameParameter = buyerName != null ?
                new ObjectParameter("buyerName", buyerName) :
                new ObjectParameter("buyerName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var workPhoneParameter = workPhone != null ?
                new ObjectParameter("workPhone", workPhone) :
                new ObjectParameter("workPhone", typeof(string));
    
            var homePhoneParameter = homePhone != null ?
                new ObjectParameter("homePhone", homePhone) :
                new ObjectParameter("homePhone", typeof(string));
    
            var leadIdParameter = leadId.HasValue ?
                new ObjectParameter("leadId", leadId) :
                new ObjectParameter("leadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PREV_SP_LEAD_INFO_Result>("PREV_SP_LEAD_INFO", startDateParameter, endDateParameter, trnsfrStartParameter, trnsfrEndParameter, productNameParameter, websiteNameParameter, leadStatusParameter, buyerNameParameter, fullNameParameter, emailParameter, workPhoneParameter, homePhoneParameter, leadIdParameter);
        }
    
        public virtual ObjectResult<PREV_SP_LEAD_INFO_SMALLDATA_Result> PREV_SP_LEAD_INFO_SMALLDATA(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> trnsfrStart, Nullable<System.DateTime> trnsfrEnd, string productName, string websiteName, string leadStatus, string buyerName, string fullName, string email, string workPhone, string homePhone, Nullable<int> leadId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var trnsfrStartParameter = trnsfrStart.HasValue ?
                new ObjectParameter("trnsfrStart", trnsfrStart) :
                new ObjectParameter("trnsfrStart", typeof(System.DateTime));
    
            var trnsfrEndParameter = trnsfrEnd.HasValue ?
                new ObjectParameter("trnsfrEnd", trnsfrEnd) :
                new ObjectParameter("trnsfrEnd", typeof(System.DateTime));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var websiteNameParameter = websiteName != null ?
                new ObjectParameter("websiteName", websiteName) :
                new ObjectParameter("websiteName", typeof(string));
    
            var leadStatusParameter = leadStatus != null ?
                new ObjectParameter("leadStatus", leadStatus) :
                new ObjectParameter("leadStatus", typeof(string));
    
            var buyerNameParameter = buyerName != null ?
                new ObjectParameter("buyerName", buyerName) :
                new ObjectParameter("buyerName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var workPhoneParameter = workPhone != null ?
                new ObjectParameter("workPhone", workPhone) :
                new ObjectParameter("workPhone", typeof(string));
    
            var homePhoneParameter = homePhone != null ?
                new ObjectParameter("homePhone", homePhone) :
                new ObjectParameter("homePhone", typeof(string));
    
            var leadIdParameter = leadId.HasValue ?
                new ObjectParameter("leadId", leadId) :
                new ObjectParameter("leadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PREV_SP_LEAD_INFO_SMALLDATA_Result>("PREV_SP_LEAD_INFO_SMALLDATA", startDateParameter, endDateParameter, trnsfrStartParameter, trnsfrEndParameter, productNameParameter, websiteNameParameter, leadStatusParameter, buyerNameParameter, fullNameParameter, emailParameter, workPhoneParameter, homePhoneParameter, leadIdParameter);
        }
    }
}
